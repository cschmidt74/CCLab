syntax for Grammar:
Tokens beginning with an uppercase Letter are non-terminals, otherwise they are terminals.
Tokens can be encased in "", so whitespace can be used.
_______________________________________________________________________________________


TAKING CARE OF MAIN

baseline:
"
package main
func main(){}
"

Tokens:
- startclause := "package main \n func main()"  
- {
- }
- epsilon

Root -> startclause { Main }
Main -> epsilon
_______________________________________________________________________________________


ADDING BASIC ARITHMETIC

baseline:
MAIN, Addition, Multiplikation, Parenthesis

example:
"
package main
func main(){
	5.4*(4.3+3.4)
}
"
 
note: - Technically this is not correct 'Go', but at this stage it should suffice
      - All Numbers are floats

Tokens:
- startclause := "package main \n func main()"  
- {
- }
- (
- )
- *
- +
- number
- epsilon

Root    -> startclause { Main }
Main    -> Term Sum
Sum     -> + Term Sum | epsilon
Term    -> Factor Product
Product -> * Factor Product
Factor   -> ( Main ) | number
